<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/rule/schema/v1.3">

    <!-- https://github.com/buschmais/jqa-core-framework/blob/master/rule/src/main/resources/META-INF/xsd/jqassistant-rules-1.4.xsd -->

    <group id="lcom-metrics">
        <includeConcept refId="lcom-metrics:LcomCountGroups"/>
    </group>

    <concept id="lcom-metrics:LcomCreateGroups">
        <description>Creates a group for each field and assigns the field to the group and the group to the class.</description>
        <cypher><![CDATA[
            MATCH (c:Java:Class)-[:DECLARES]->(f:Field) WHERE f.static IS NULL
            WITH c, collect(f) AS fields
            OPTIONAL MATCH (c)-[:DECLARES]->(m:Method) WHERE m.static IS NULL
            WITH c, fields, collect(m) AS methods
            UNWIND fields AS field
            MERGE (c)-[:HAS_GROUP]->(g:Group {name:id(field), group:true})-[:BELONGS_TO]->(field)
            WITH c, methods, field, g
            UNWIND methods AS method
            MATCH (method)-[:READS|WRITES*1..]->(field)
            MERGE (g)-[:BELONGS_TO]->(method)
            WITH c, methods, field, g
            MATCH (method)-[:INVOKES*1..]->(:Method)-[:READS|WRITES*1..]->(field)
            MERGE (g)-[:BELONGS_TO]->(method)
            RETURN g
        ]]></cypher>
    </concept>

    <concept id="lcom-metrics:LcomMergeGroups">
        <requiresConcept refId="lcom-metrics:LcomCreateGroups"/>
        <description>Merges all groups that belong to one shared field or method.</description>
        <cypher><![CDATA[
            MATCH (c:Java:Class)-[:DECLARES]->(m:Method) WHERE m.static IS NULL
            WITH c, collect(m) AS methods
            UNWIND methods AS method
            MATCH path=(g1:Group)-[:BELONGS_TO]->(method)<-[:BELONGS_TO]-(g2:Group) WHERE g1<>g2
            WITH c, methods, filter(aNode IN nodes(path) WHERE aNode.group = true) AS groups
            CALL apoc.refactor.mergeNodes(groups, {properties:"combine"}) YIELD node
            RETURN c
        ]]></cypher>
    </concept>

    <!--
            MATCH (c:Java:Class)-[:DECLARES]->(m:Method) WHERE m.static IS NULL
            WITH c, collect(m) AS methods
            UNWIND methods AS method
            MATCH (c)-[:HAS_GROUP]->(g1:Group)-[:BELONGS_TO]->(method)<-[:BELONGS_TO]-(g2:Group)<-[oldHasGroup:HAS_GROUP]-(c), (g2)-[oldBelongsTo:BELONGS_TO]->(mOrF:Java) WHERE g1<>g2
            MERGE (g1)-[:BELONGS_TO]->(mOrF)
            DELETE oldHasGroup DELETE oldBelongsTo DELETE g2
            RETURN c
    -->

    <concept id="lcom-metrics:LcomCountGroups">
        <requiresConcept refId="lcom-metrics:LcomMergeGroups"/>
        <description>Counts the groups per class and sets the attribute lcom.</description>
        <cypher><![CDATA[
            MATCH (c:Java:Class)-[:HAS_GROUP]->(g:Group)
            WITH c, count(DISTINCT g) AS lcom
            SET c.lcom = lcom
            RETURN c
        ]]></cypher>
    </concept>

</jqa:jqassistant-rules>
